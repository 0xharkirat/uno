parameters:
  vmImage: ''

jobs:
- job: Unit_Tests
  displayName: 'Unit Tests'
  timeoutInMinutes: 90

  pool:
    vmImage: ${{ parameters.vmImage }}

  dependsOn: Pipeline_Validations

  strategy:
    matrix:
      Default_Compiler:
        ADDITIONAL_FLAGS: ''

      # Keep for future previews
      # Preview:
      #   ADDITIONAL_FLAGS: '/p:LangVersion=preview /p:UnoUIUseRoslynSourceGenerators=true /p:MicrosoftNetCompilerVersionOverride=3.8.0-3.final'

      #CSharp9:
      #  ADDITIONAL_FLAGS: '/p:LangVersion=9.0 /p:UnoUIUseRoslynSourceGenerators=true'

  variables:
    CombinedConfiguration: Release|Any CPU
    CI_Build: true

    # This is required to be able to use hard links as much as possible
    NUGET_PACKAGES: $(Agent.WorkFolder)\.nuget


  steps:
  - checkout: self
    clean: true

  - template: templates/nuget-cache.yml
    parameters:
      nugetPackages: $(NUGET_PACKAGES)

  - template: templates/gitversion.yml
  - template: templates/dotnet-install.yml
  - template: templates/jdk-setup.yml
  - template: templates/update-vs-components.yml

  # We need to build Skia for generator unit testing. Otherwise, tests will throw exceptions.
  - task: MSBuild@1
    inputs:
      solution: src/Uno.UI/Uno.UI.Skia.csproj
      msbuildArguments: /r /p:CheckExclusions=True /p:Configuration=Debug /nodeReuse:true /p:TargetFrameworksCI=netstandard2.0 /detailedsummary /m $(ADDITIONAL_FLAGS) /bl:$(build.artifactstagingdirectory)\skia-for-unit-tests-build.binlog

  - task: MSBuild@1
    inputs:
      solution: src/Uno.UI-UnitTests-only.slnf
      msbuildArguments: /r /p:CheckExclusions=True /p:Configuration=Release /nodeReuse:true /p:TargetFrameworksCI=net461 /detailedsummary /m $(ADDITIONAL_FLAGS) /bl:$(build.artifactstagingdirectory)\unit-tests-build.binlog

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: NugetPackages-Artifacts
      ArtifactType: Container

  - task: VisualStudioTestPlatformInstaller@1
    inputs:
      versionSelector: latestStable

  - task: VSTest@2
    inputs:
      testAssemblyVer2: |
        **\*test*.dll
        !**\obj\**
        !**\*Wasm.Test*.dll
        !**\*UITests.dll
        !**\*.RuntimeTests.dll
        !**\Microsoft.CodeAnalysis.Analyzer.Testing.dll
        !**\Microsoft.CodeAnalysis.CSharp.SourceGenerators.Testing.MSTest.dll
        !**\Microsoft.CodeAnalysis.CSharp.SourceGenerators.Testing.dll
        !**\Microsoft.CodeAnalysis.SourceGenerators.Testing.dll
        !**\Microsoft.CodeAnalysis.Testing.Verifiers.MSTest.dll
        !**\Microsoft.TestPlatform.PlatformAbstractions.dll
        !**\Microsoft.VisualStudio.TestPlatform.ObjectModel.dll
        !**\testhost.dll
      vsTestVersion: toolsInstaller
      testRunTitle: $(Agent.JobName)
      testSelector: testAssemblies
      batchingBasedOnAgentsOption: customBatchSize
      rerunFailedTests: 'true'
      customBatchSizeValue: 200 # test count / 10 (https://developercommunity.visualstudio.com/content/problem/891803/vstestconsoleadapter-fails-with-outofmemory.html?childToView=896206#comment-896206)
