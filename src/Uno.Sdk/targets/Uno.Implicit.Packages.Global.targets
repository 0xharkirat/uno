<Project>

	<ItemGroup>
		<_UnoImplicitPackageReference Include="Uno.WinUI" IsImplicitlyDefined="true" />
		<_UnoImplicitPackageReference Include="Microsoft.Extensions.Logging.Console" IsImplicitlyDefined="true" />
		<_UnoImplicitPackageReference Include="Uno.Resizetizer" IsImplicitlyDefined="true" />
	</ItemGroup>

	<ItemGroup Condition="!$(TargetFramework.Contains('windows10'))">
		<_UnoImplicitPackageReference Include="Uno.WinUI.Lottie" IsImplicitlyDefined="true" />
		<_UnoImplicitPackageReference Include="Uno.WinUI.DevServer" IsImplicitlyDefined="true" Condition="$(Configuration) == 'Debug'" />
	</ItemGroup>

	<ItemGroup Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) != 'browser'">
		<_UnoImplicitPackageReference Include="SkiaSharp.Skottie" IsImplicitlyDefined="true" />
		<_UnoImplicitPackageReference Include="SkiaSharp.Views.Uno.WinUI" IsImplicitlyDefined="true" />
	</ItemGroup>

	<Choose>
		<When Condition="$(UnoFeatures.Split(';').Contains('All')) != '-1'">
			<ItemGroup>
				<_UnoImplicitPackageReference Include="Uno.WinUI.Maps" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.WinUI.Foldable" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.WinUI.MSAL" IsImplicitlyDefined="true" />
			</ItemGroup>
		</When>
		<Otherwise>
			<ItemGroup Condition="$(UnoFeatures.Split(';').Contains('Maps')) != '-1'">
				<_UnoImplicitPackageReference Include="Uno.WinUI.Maps" IsImplicitlyDefined="true" />
			</ItemGroup>
			<ItemGroup Condition="$(UnoFeatures.Split(';').Contains('Foldable')) != '-1'">
				<_UnoImplicitPackageReference Include="Uno.WinUI.Foldable" IsImplicitlyDefined="true" />
			</ItemGroup>
			<ItemGroup Condition="$(UnoFeatures.Split(';').Contains('Msal')) != '-1'">
				<_UnoImplicitPackageReference Include="Uno.WinUI.MSAL" IsImplicitlyDefined="true" />
			</ItemGroup>
		</ItemGroup>
	</Choose>

	<Choose>
		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">
			<ItemGroup>
				<_UnoImplicitPackageReference Include="Uno.Extensions.Logging.OSLog" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.UniversalImageLoader" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Xamarin.Google.Android.Material" IsImplicitlyDefined="true" />
			</ItemGroup>
		</When>
		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'browser'">
			<ItemGroup>
				<_UnoImplicitPackageReference Include="Uno.WinUI.WebAssembly" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Logging.WebAssembly.Console" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Microsoft.Windows.Compatibility" IsImplicitlyDefined="true" />
			</ItemGroup>

			<ItemGroup Condition="$(SingleProject) == 'true' or $(MSBuildProjectName.EndsWith('.Wasm')) or $(MSBuildProjectName.EndsWith('.WebAssembly'))">
				<_UnoImplicitPackageReference Include="Uno.Wasm.Bootstrap" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Wasm.Bootstrap.DevServer" IsImplicitlyDefined="true" />
			</ItemGroup>
		</When>
		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">
			<ItemGroup>
				<_UnoImplicitPackageReference Include="Uno.Extensions.Logging.OSLog" IsImplicitlyDefined="true" />
			</ItemGroup>
		</When>
		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">
			<ItemGroup>
				<_UnoImplicitPackageReference Include="Uno.Extensions.Logging.OSLog" IsImplicitlyDefined="true" />
			</ItemGroup>
		</When>
		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'macos'">
			<ItemGroup>
				<_UnoImplicitPackageReference Include="Uno.Extensions.Logging.OSLog" IsImplicitlyDefined="true" />
			</ItemGroup>
		</When>
		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'skia'">
			<ItemGroup>
				<_UnoImplicitPackageReference Include="Uno.WinUI.Skia.Gtk" IsImplicitlyDefined="true" />
			</ItemGroup>
		</When>
		<When Condition="$(TargetFramework.Contains('windows10'))">
			<ItemGroup>
				<_UnoImplicitPackageReference Include="Microsoft.WindowsAppSDK" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Microsoft.Windows.SDK.BuildTools" IsImplicitlyDefined="true" />
			</ItemGroup>
		</When>
	</Choose>

	<ItemGroup Condition="$(UnoCSharpMarkupVersion) != ''">
		<_UnoImplicitPackageReference Include="Uno.Extensions.Markup.WinUI" IsImplicitlyDefined="true" />
		<_UnoImplicitPackageReference Include="Uno.Extensions.Markup.Generators" IsImplicitlyDefined="true" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers" />
	</ItemGroup>

	<Choose Condition="$(UnoExtensionsVersion)">
		<When Condition="$(UnoExtensionsFeatures.Split(';').Contains('All')) != '-1'">
			<ItemGroup>
				<_UnoImplicitPackageReference Include="Uno.Extensions.Authentication.WinUI" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Authentication.MSAL.WinUI" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Authentication.Oidc.WinUI" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Core.WinUI" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Configuration" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Hosting.WinUI" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Http.WinUI" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Http.Refit" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Localization.WinUI" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Logging.WinUI" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Maui.WinUI" IsImplicitlyDefined="true" Condition="$(UseUnoMauiEmbedding) == 'true'" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Maui.WinUI.Markup" IsImplicitlyDefined="true" Condition="$(UseUnoMauiEmbedding) == 'true' AND $(UnoCSharpMarkupVersion) != ''" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Navigation.WinUI" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Navigation.WinUI.Markup" IsImplicitlyDefined="true" Condition="$(UnoCSharpMarkupVersion) != ''" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Navigation.Toolkit.WinUI" IsImplicitlyDefined="true" Condition="$(UnoToolkitVersion) != ''" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Reactive.WinUI" IsImplicitlyDefined="true" Condition="$(UnoPresentation) == 'Mvux'" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Reactive.WinUI.Markup" IsImplicitlyDefined="true" Condition="$(UnoPresentation) == 'Mvux'"  />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Storage.WinUI" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Serialization.Http" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Serialization.Refit" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Toolkit.WinUI" IsImplicitlyDefined="true" Condition="$(UnoToolkitVersion) != ''" />
			</ItemGroup>
		</When>
		<Otherwise>
			<ItemGroup Condition="$(UnoExtensionsFeatures.Split(';').Contains('Authentication')) != '-1'">
				<_UnoImplicitPackageReference Include="Uno.Extensions.Authentication.WinUI" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Authentication.MSAL.WinUI" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Authentication.Oidc.WinUI" IsImplicitlyDefined="true" />
			</ItemGroup>
			<ItemGroup Condition="$(UnoExtensionsFeatures.Split(';').Contains('Authentication')) == '-1' AND $(UnoExtensionsFeatures.Split(';').Contains('AuthenticationMsal')) != '-1'">
				<_UnoImplicitPackageReference Include="Uno.Extensions.Authentication.MSAL.WinUI" IsImplicitlyDefined="true" />
			</ItemGroup>
			<ItemGroup Condition="$(UnoExtensionsFeatures.Split(';').Contains('Authentication')) == '-1' AND $(UnoExtensionsFeatures.Split(';').Contains('AuthenticationOidc')) != '-1'">
				<_UnoImplicitPackageReference Include="Uno.Extensions.Authentication.Oidc.WinUI" IsImplicitlyDefined="true" />
			</ItemGroup>
			<ItemGroup Condition="$(UnoExtensionsFeatures.Split(';').Contains('Configuration')) != '-1'">
				<_UnoImplicitPackageReference Include="Uno.Extensions.Configuration" IsImplicitlyDefined="true" />
			</ItemGroup>
			<ItemGroup Condition="$(UnoExtensionsFeatures.Split(';').Contains('Core')) != '-1'">
				<_UnoImplicitPackageReference Include="Uno.Extensions.Core.WinUI" IsImplicitlyDefined="true" />
			</ItemGroup>
			<ItemGroup Condition="$(UnoExtensionsFeatures.Split(';').Contains('Hosting')) != '-1'">
				<_UnoImplicitPackageReference Include="Uno.Extensions.Hosting.WinUI" IsImplicitlyDefined="true" />
			</ItemGroup>
			<ItemGroup Condition="$(UnoExtensionsFeatures.Split(';').Contains('Http')) != '-1'">
				<_UnoImplicitPackageReference Include="Uno.Extensions.Http.WinUI" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Http.Refit" IsImplicitlyDefined="true" />
			</ItemGroup>
			<ItemGroup Condition="$(UnoExtensionsFeatures.Split(';').Contains('Localization')) != '-1'">
				<_UnoImplicitPackageReference Include="Uno.Extensions.Localization.WinUI" IsImplicitlyDefined="true" />
			</ItemGroup>
			<ItemGroup Condition="$(UnoExtensionsFeatures.Split(';').Contains('Logging')) != '-1'">
				<_UnoImplicitPackageReference Include="Uno.Extensions.Logging.WinUI" IsImplicitlyDefined="true" />
			</ItemGroup>
			<ItemGroup Condition="$(UnoExtensionsFeatures.Split(';').Contains('Maui')) != '-1'">
				<_UnoImplicitPackageReference Include="Uno.Extensions.Maui.WinUI" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Maui.WinUI.Markup" IsImplicitlyDefined="true" Condition="$(UnoCSharpMarkupVersion) != ''" />
			</ItemGroup>
			<ItemGroup Condition="$(UnoExtensionsFeatures.Split(';').Contains('Navigation')) != '-1'">
				<_UnoImplicitPackageReference Include="Uno.Extensions.Navigation.WinUI" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Navigation.WinUI.Markup" IsImplicitlyDefined="true" Condition="$(UnoCSharpMarkupVersion) != ''" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Navigation.Toolkit.WinUI" IsImplicitlyDefined="true" />
			</ItemGroup>
			<ItemGroup Condition="$(UnoExtensionsFeatures.Split(';').Contains('Reactive')) != '-1'">
				<_UnoImplicitPackageReference Include="Uno.Extensions.Reactive.WinUI" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Reactive.WinUI.Markup" IsImplicitlyDefined="true" Condition="$(UnoCSharpMarkupVersion) != ''" />
			</ItemGroup>
			<ItemGroup Condition="$(UnoExtensionsFeatures.Split(';').Contains('Storage')) != '-1'">
				<_UnoImplicitPackageReference Include="Uno.Extensions.Storage.WinUI" IsImplicitlyDefined="true" />
			</ItemGroup>
			<ItemGroup Condition="$(UnoExtensionsFeatures.Split(';').Contains('Serialization')) != '-1'">
				<_UnoImplicitPackageReference Include="Uno.Extensions.Serialization.Http" IsImplicitlyDefined="true" />
				<_UnoImplicitPackageReference Include="Uno.Extensions.Serialization.Refit" IsImplicitlyDefined="true" />
			</ItemGroup>
			<ItemGroup Condition="$(UnoExtensionsFeatures.Split(';').Contains('Toolkit')) != '-1'">
				<_UnoImplicitPackageReference Include="Uno.Extensions.Toolkit.WinUI" IsImplicitlyDefined="true" />
			</ItemGroup>
		</Otherwise>
	</Choose>

	<ItemGroup Condition="$(UnoToolkitVersion) != ''">
		<_UnoImplicitPackageReference Include="Uno.Toolkit.WinUI" IsImplicitlyDefined="true" />
		<_UnoImplicitPackageReference Include="Uno.Toolkit.WinUI.Cupertino" IsImplicitlyDefined="true" Condition="$(UnoTheme) == 'Cupertino'" />
		<_UnoImplicitPackageReference Include="Uno.Toolkit.WinUI.Material" IsImplicitlyDefined="true" Condition="$(UnoTheme) == 'Material'" />
		<_UnoImplicitPackageReference Include="Uno.Toolkit.WinUI.Material.Markup" IsImplicitlyDefined="true" Condition="$(UnoTheme) == 'Material'" />
		<_UnoImplicitPackageReference Include="Uno.Toolkit.WinUI.Markup" IsImplicitlyDefined="true" />
		<_UnoImplicitPackageReference Include="Uno.Toolkit.Skia.WinUI" IsImplicitlyDefined="true" />
	</ItemGroup>

	<ItemGroup Condition="$(UnoPresentation) == 'Mvvm'">
		<_UnoImplicitPackageReference Include="CommunityToolkit.Mvvm" IsImplicitlyDefined="true" />
	</ItemGroup>

	<ItemGroup Condition="$(UnoPresentation) == 'Prism'">
		<_UnoImplicitPackageReference Include="Prism.Uno.WinUI" IsImplicitlyDefined="true" />
		<_UnoImplicitPackageReference Include="Prism.Uno.WinUI.Markup" IsImplicitlyDefined="true" />
		<_UnoImplicitPackageReference Include="Prism.DryIoc.Uno.WinUI" IsImplicitlyDefined="true" Condition=" $(SingleProject) == 'true' or $(OutputType) == 'WinExe' or $(OutputType) == 'Exe' " />
	</ItemGroup>

</Project>
