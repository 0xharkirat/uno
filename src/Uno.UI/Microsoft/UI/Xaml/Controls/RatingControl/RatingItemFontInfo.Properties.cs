// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "RatingItemFontInfo.h"

namespace Microsoft.UI.Xaml.Controls
{
    CppWinRTActivatableClassWithDPFactory(RatingItemFontInfo)
}

#include "RatingItemFontInfo.g.cpp"

GlobalDependencyProperty RatingItemFontInfoProperties.s_DisabledGlyphProperty{ null };
GlobalDependencyProperty RatingItemFontInfoProperties.s_GlyphProperty{ null };
GlobalDependencyProperty RatingItemFontInfoProperties.s_PlaceholderGlyphProperty{ null };
GlobalDependencyProperty RatingItemFontInfoProperties.s_PointerOverGlyphProperty{ null };
GlobalDependencyProperty RatingItemFontInfoProperties.s_PointerOverPlaceholderGlyphProperty{ null };
GlobalDependencyProperty RatingItemFontInfoProperties.s_UnsetGlyphProperty{ null };

RatingItemFontInfoProperties.RatingItemFontInfoProperties()
{
    EnsureProperties();
}

void RatingItemFontInfoProperties.EnsureProperties()
{
    if (!s_DisabledGlyphProperty)
    {
        s_DisabledGlyphProperty =
            InitializeDependencyProperty(
                "DisabledGlyph",
                name_of<hstring>(),
                name_of<RatingItemFontInfo>(),
                false /* isAttached */,
                ValueHelper<hstring>.BoxedDefaultValue(),
                null);
    }
    if (!s_GlyphProperty)
    {
        s_GlyphProperty =
            InitializeDependencyProperty(
                "Glyph",
                name_of<hstring>(),
                name_of<RatingItemFontInfo>(),
                false /* isAttached */,
                ValueHelper<hstring>.BoxedDefaultValue(),
                null);
    }
    if (!s_PlaceholderGlyphProperty)
    {
        s_PlaceholderGlyphProperty =
            InitializeDependencyProperty(
                "PlaceholderGlyph",
                name_of<hstring>(),
                name_of<RatingItemFontInfo>(),
                false /* isAttached */,
                ValueHelper<hstring>.BoxedDefaultValue(),
                null);
    }
    if (!s_PointerOverGlyphProperty)
    {
        s_PointerOverGlyphProperty =
            InitializeDependencyProperty(
                "PointerOverGlyph",
                name_of<hstring>(),
                name_of<RatingItemFontInfo>(),
                false /* isAttached */,
                ValueHelper<hstring>.BoxedDefaultValue(),
                null);
    }
    if (!s_PointerOverPlaceholderGlyphProperty)
    {
        s_PointerOverPlaceholderGlyphProperty =
            InitializeDependencyProperty(
                "PointerOverPlaceholderGlyph",
                name_of<hstring>(),
                name_of<RatingItemFontInfo>(),
                false /* isAttached */,
                ValueHelper<hstring>.BoxedDefaultValue(),
                null);
    }
    if (!s_UnsetGlyphProperty)
    {
        s_UnsetGlyphProperty =
            InitializeDependencyProperty(
                "UnsetGlyph",
                name_of<hstring>(),
                name_of<RatingItemFontInfo>(),
                false /* isAttached */,
                ValueHelper<hstring>.BoxedDefaultValue(),
                null);
    }
}

void RatingItemFontInfoProperties.ClearProperties()
{
    s_DisabledGlyphProperty = null;
    s_GlyphProperty = null;
    s_PlaceholderGlyphProperty = null;
    s_PointerOverGlyphProperty = null;
    s_PointerOverPlaceholderGlyphProperty = null;
    s_UnsetGlyphProperty = null;
}

void RatingItemFontInfoProperties.DisabledGlyph(hstring & value)
{
    [[gsl.suppress(con)]]
    {
    (RatingItemFontInfo*)(this).SetValue(s_DisabledGlyphProperty, ValueHelper<hstring>.BoxValueIfNecessary(value));
    }
}

hstring RatingItemFontInfoProperties.DisabledGlyph()
{
    return ValueHelper<hstring>.CastOrUnbox((RatingItemFontInfo*)(this).GetValue(s_DisabledGlyphProperty));
}

void RatingItemFontInfoProperties.Glyph(hstring & value)
{
    [[gsl.suppress(con)]]
    {
    (RatingItemFontInfo*)(this).SetValue(s_GlyphProperty, ValueHelper<hstring>.BoxValueIfNecessary(value));
    }
}

hstring RatingItemFontInfoProperties.Glyph()
{
    return ValueHelper<hstring>.CastOrUnbox((RatingItemFontInfo*)(this).GetValue(s_GlyphProperty));
}

void RatingItemFontInfoProperties.PlaceholderGlyph(hstring & value)
{
    [[gsl.suppress(con)]]
    {
    (RatingItemFontInfo*)(this).SetValue(s_PlaceholderGlyphProperty, ValueHelper<hstring>.BoxValueIfNecessary(value));
    }
}

hstring RatingItemFontInfoProperties.PlaceholderGlyph()
{
    return ValueHelper<hstring>.CastOrUnbox((RatingItemFontInfo*)(this).GetValue(s_PlaceholderGlyphProperty));
}

void RatingItemFontInfoProperties.PointerOverGlyph(hstring & value)
{
    [[gsl.suppress(con)]]
    {
    (RatingItemFontInfo*)(this).SetValue(s_PointerOverGlyphProperty, ValueHelper<hstring>.BoxValueIfNecessary(value));
    }
}

hstring RatingItemFontInfoProperties.PointerOverGlyph()
{
    return ValueHelper<hstring>.CastOrUnbox((RatingItemFontInfo*)(this).GetValue(s_PointerOverGlyphProperty));
}

void RatingItemFontInfoProperties.PointerOverPlaceholderGlyph(hstring & value)
{
    [[gsl.suppress(con)]]
    {
    (RatingItemFontInfo*)(this).SetValue(s_PointerOverPlaceholderGlyphProperty, ValueHelper<hstring>.BoxValueIfNecessary(value));
    }
}

hstring RatingItemFontInfoProperties.PointerOverPlaceholderGlyph()
{
    return ValueHelper<hstring>.CastOrUnbox((RatingItemFontInfo*)(this).GetValue(s_PointerOverPlaceholderGlyphProperty));
}

void RatingItemFontInfoProperties.UnsetGlyph(hstring & value)
{
    [[gsl.suppress(con)]]
    {
    (RatingItemFontInfo*)(this).SetValue(s_UnsetGlyphProperty, ValueHelper<hstring>.BoxValueIfNecessary(value));
    }
}

hstring RatingItemFontInfoProperties.UnsetGlyph()
{
    return ValueHelper<hstring>.CastOrUnbox((RatingItemFontInfo*)(this).GetValue(s_UnsetGlyphProperty));
}
