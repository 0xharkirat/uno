using System.Threading.Tasks;
using System.Collections.Generic;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.CodeAnalysis.Testing;
using Uno.Analyzers.Tests.Verifiers;

namespace Uno.Analyzers.Tests;

using Verify = CSharpCodeFixVerifier<UnoInitializeComponentAnalyzer, EmptyCodeFixProvider>;

[TestClass]
public class UnoInitializeComponentAnalyzerTests
{
	private static string InitComponentImpl = """
		// <auto-generated />
		namespace MyNamespace;

		public partial class C
		{
			public void InitializeComponent() { }
		}
		""";

	private static string InitComponentImplWithDiagnostic = """
		// <auto-generated />
		namespace MyNamespace;

		public partial class [|C|]
		{
			public void InitializeComponent() { }
		}
		""";

	private static async Task VerifyAsync(string code1, string code2)
	{
		await new Verify.Test
		{
			TestState =
			{
				Sources =
				{
					code1,
					code2,
				},
			},
			FixedState =
			{
				Sources =
				{
					code1,
					code2,
				}
			}
		}.RunAsync();
	}

	[TestMethod]
	public async Task CalledFromNonGeneratedPartial_NoDiagnostic()
	{
		var code = """
			namespace MyNamespace;

			public partial class C
			{
				public C()
				{
					InitializeComponent();
				}
			}
			""";

		await VerifyAsync(code, InitComponentImpl);
		await VerifyAsync(InitComponentImpl, code);
	}

	[TestMethod]
	public async Task CalledFromGeneratedPartial_NoDiagnostic()
	{
		var code = """
			// <auto-generated />
			namespace MyNamespace;

			public partial class C
			{
				public C()
				{
					InitializeComponent();
				}
			}
			""";

		await VerifyAsync(code, InitComponentImpl);
		await VerifyAsync(InitComponentImpl, code);
	}

	[TestMethod]
	public async Task NotCalledWithConstructorDeclared_Diagnostic()
	{
		var code = """
			namespace MyNamespace;

			public partial class C
			{
				public C()
				{
				}
			}
			""";

		var codeWithDiagnostic = """
			namespace MyNamespace;

			public partial class [|C|]
			{
				public C()
				{
				}
			}
			""";

		await VerifyAsync(codeWithDiagnostic, InitComponentImpl);
		await VerifyAsync(InitComponentImplWithDiagnostic, code);
	}

	[TestMethod]
	public async Task NotCalledWithNoConstructorDeclared_Diagnostic()
	{
		var code = """
			namespace MyNamespace;

			public partial class C
			{
				public C()
				{
				}
			}
			""";

		var codeWithDiagnostic = """
			namespace MyNamespace;

			public partial class [|C|]
			{
			}
			""";

		await VerifyAsync(codeWithDiagnostic, InitComponentImpl);
		await VerifyAsync(InitComponentImplWithDiagnostic, code);
	}
}
